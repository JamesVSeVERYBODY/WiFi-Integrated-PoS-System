{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"error":{},"level":"warn","message":"Operation failed, retrying (1/3)","service":"db-service"}
{"error":{},"level":"warn","message":"Operation failed, retrying (2/3)","service":"db-service"}
{"error":{},"level":"warn","message":"Operation failed, retrying (3/3)","service":"db-service"}
{"level":"error","message":"Error inserting token: sanitizedRecord is not defined","service":"db-service","stack":"ReferenceError: sanitizedRecord is not defined\n    at /home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbService.js:14:36\n    at async retryOperation (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbUtils.js:34:14)\n    at async insertTokenRecord (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbService.js:12:7)\n    at async runService (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbService.js:214:13)"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"error":{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: pos_dummy.tokens index: token_1 dup key: { token: \"exampleToken\" }","index":0,"keyPattern":{"token":1},"keyValue":{"token":"exampleToken"}},"index":0,"keyPattern":{"token":1},"keyValue":{"token":"exampleToken"}},"level":"warn","message":"Operation failed, retrying (1/3)","service":"db-service"}
{"error":{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: pos_dummy.tokens index: token_1 dup key: { token: \"exampleToken\" }","index":0,"keyPattern":{"token":1},"keyValue":{"token":"exampleToken"}},"index":0,"keyPattern":{"token":1},"keyValue":{"token":"exampleToken"}},"level":"warn","message":"Operation failed, retrying (2/3)","service":"db-service"}
{"error":{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: pos_dummy.tokens index: token_1 dup key: { token: \"exampleToken\" }","index":0,"keyPattern":{"token":1},"keyValue":{"token":"exampleToken"}},"index":0,"keyPattern":{"token":1},"keyValue":{"token":"exampleToken"}},"level":"warn","message":"Operation failed, retrying (3/3)","service":"db-service"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: pos_dummy.tokens index: token_1 dup key: { token: \"exampleToken\" }","index":0,"keyPattern":{"token":1},"keyValue":{"token":"exampleToken"}},"index":0,"keyPattern":{"token":1},"keyValue":{"token":"exampleToken"},"level":"error","message":"Error inserting token: E11000 duplicate key error collection: pos_dummy.tokens index: token_1 dup key: { token: \"exampleToken\" }","service":"db-service","stack":"MongoServerError: E11000 duplicate key error collection: pos_dummy.tokens index: token_1 dup key: { token: \"exampleToken\" }\n    at InsertOneOperation.execute (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/node_modules/mongodb/lib/operations/insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/node_modules/mongodb/lib/operations/execute_operation.js:136:16)\n    at async Collection.insertOne (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/node_modules/mongodb/lib/collection.js:154:16)"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"level":"info","message":"Token inserted successfully!","service":"db-service"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"level":"info","message":"Token inserted successfully!","service":"db-service"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"error":{"name":"DbServiceError","statusCode":404},"level":"warn","message":"Operation failed, retrying (1/3)","service":"db-service"}
{"error":{"name":"DbServiceError","statusCode":404},"level":"warn","message":"Operation failed, retrying (2/3)","service":"db-service"}
{"error":{"name":"DbServiceError","statusCode":404},"level":"warn","message":"Operation failed, retrying (3/3)","service":"db-service"}
{"level":"error","message":"Error finding token: Token not found","name":"DbServiceError","service":"db-service","stack":"DbServiceError: Token not found\n    at /home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbService.js:29:17\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async retryOperation (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbUtils.js:34:14)\n    at async findTokenRecord (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbService.js:25:14)\n    at async runService (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbService.js:192:22)","statusCode":404}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"level":"info","message":"Token deleted successfully!","service":"db-service"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"level":"info","message":"Token inserted successfully!","service":"db-service"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"error":{},"level":"warn","message":"Operation failed, retrying (1/3)","service":"db-service"}
{"error":{},"level":"warn","message":"Operation failed, retrying (2/3)","service":"db-service"}
{"error":{},"level":"warn","message":"Operation failed, retrying (3/3)","service":"db-service"}
{"level":"error","message":"Error finding tokens: sanitizeInput is not a function","service":"db-service","stack":"TypeError: sanitizeInput is not a function\n    at /home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbService.js:94:41\n    at async retryOperation (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbUtils.js:34:14)\n    at async findTokensByCriteria (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbService.js:92:16)\n    at async runService (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbService.js:187:13)"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
{"error":{"name":"DbServiceError","statusCode":400},"level":"warn","message":"Operation failed, retrying (1/3)","service":"db-service"}
{"error":{"name":"DbServiceError","statusCode":400},"level":"warn","message":"Operation failed, retrying (2/3)","service":"db-service"}
{"error":{"name":"DbServiceError","statusCode":400},"level":"warn","message":"Operation failed, retrying (3/3)","service":"db-service"}
{"level":"error","message":"Error adding device: Maximum devices limit reached","name":"DbServiceError","service":"db-service","stack":"DbServiceError: Maximum devices limit reached\n    at /home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbService.js:113:23\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async retryOperation (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbUtils.js:34:14)\n    at async addDeviceToToken (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbService.js:106:16)\n    at async runService (/home/narindrans-wsl/programming/WiFi-Integrated-PoS-System/backend/services/dbService/dbService.js:179:13)","statusCode":400}
{"level":"info","message":"Connected to MongoDB","service":"db-service"}
